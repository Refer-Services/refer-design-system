/* eslint-disable @typescript-eslint/ban-ts-comment */
/* eslint-disable @typescript-eslint/no-explicit-any */
// @ts-nocheck
// This file is autogenerated by scripts/build-registry.ts
// Do not edit this file directly.
import * as React from "react"

export const Index: Record<string, any> = {
  "accordion": {
    name: "accordion",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/accordion.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/accordion.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "alert": {
    name: "alert",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/alert.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/alert.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "alert-dialog": {
    name: "alert-dialog",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [{
      path: "registry/ui/alert-dialog.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/alert-dialog.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "aspect-ratio": {
    name: "aspect-ratio",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/aspect-ratio.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/aspect-ratio.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "avatar": {
    name: "avatar",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/avatar.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/avatar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "badge": {
    name: "badge",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/badge.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/badge.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "breadcrumb": {
    name: "breadcrumb",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/breadcrumb.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/breadcrumb.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "button": {
    name: "button",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/button.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/button.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "calendar": {
    name: "calendar",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [{
      path: "registry/ui/calendar.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/calendar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "card": {
    name: "card",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/card.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "carousel": {
    name: "carousel",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [{
      path: "registry/ui/carousel.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/carousel.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart": {
    name: "chart",
    description: "",
    type: "registry:ui",
    registryDependencies: ["card"],
    files: [{
      path: "registry/ui/chart.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/chart.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "checkbox": {
    name: "checkbox",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/checkbox.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/checkbox.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "collapsible": {
    name: "collapsible",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/collapsible.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/collapsible.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "command": {
    name: "command",
    description: "",
    type: "registry:ui",
    registryDependencies: ["dialog"],
    files: [{
      path: "registry/ui/command.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/command.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "context-menu": {
    name: "context-menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/context-menu.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/context-menu.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "dialog": {
    name: "dialog",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/dialog.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/dialog.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "drawer": {
    name: "drawer",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/drawer.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/drawer.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "dropdown-menu": {
    name: "dropdown-menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/dropdown-menu.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/dropdown-menu.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "form": {
    name: "form",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button","label"],
    files: [{
      path: "registry/ui/form.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/form.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "hover-card": {
    name: "hover-card",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/hover-card.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/hover-card.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "input": {
    name: "input",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/input.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/input.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "input-otp": {
    name: "input-otp",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/input-otp.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/input-otp.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "label": {
    name: "label",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/label.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "menubar": {
    name: "menubar",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/menubar.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/menubar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "navigation-menu": {
    name: "navigation-menu",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/navigation-menu.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/navigation-menu.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "pagination": {
    name: "pagination",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button"],
    files: [{
      path: "registry/ui/pagination.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/pagination.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "popover": {
    name: "popover",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/popover.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/popover.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "progress": {
    name: "progress",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/progress.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/progress.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "radio-group": {
    name: "radio-group",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/radio-group.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/radio-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "resizable": {
    name: "resizable",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/resizable.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/resizable.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "scroll-area": {
    name: "scroll-area",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/scroll-area.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/scroll-area.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "select": {
    name: "select",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/select.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/select.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "separator": {
    name: "separator",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/separator.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/separator.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sheet": {
    name: "sheet",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/sheet.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/sheet.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar": {
    name: "sidebar",
    description: "",
    type: "registry:ui",
    registryDependencies: ["button","separator","sheet","tooltip","input","use-mobile","skeleton"],
    files: [{
      path: "registry/ui/sidebar.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/sidebar.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {"config":{"theme":{"extend":{"colors":{"sidebar":{"DEFAULT":"hsl(var(--sidebar-background))","foreground":"hsl(var(--sidebar-foreground))","primary":"hsl(var(--sidebar-primary))","primary-foreground":"hsl(var(--sidebar-primary-foreground))","accent":"hsl(var(--sidebar-accent))","accent-foreground":"hsl(var(--sidebar-accent-foreground))","border":"hsl(var(--sidebar-border))","ring":"hsl(var(--sidebar-ring))"}}}}}},
    cssVars: {"light":{"sidebar-background":"0 0% 98%","sidebar-foreground":"240 5.3% 26.1%","sidebar-primary":"240 5.9% 10%","sidebar-primary-foreground":"0 0% 98%","sidebar-accent":"240 4.8% 95.9%","sidebar-accent-foreground":"240 5.9% 10%","sidebar-border":"220 13% 91%","sidebar-ring":"217.2 91.2% 59.8%"},"dark":{"sidebar-background":"240 5.9% 10%","sidebar-foreground":"240 4.8% 95.9%","sidebar-primary":"224.3 76.3% 48%","sidebar-primary-foreground":"0 0% 100%","sidebar-accent":"240 3.7% 15.9%","sidebar-accent-foreground":"240 4.8% 95.9%","sidebar-border":"240 3.7% 15.9%","sidebar-ring":"217.2 91.2% 59.8%"}},
  },
  "skeleton": {
    name: "skeleton",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/skeleton.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/skeleton.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "slider": {
    name: "slider",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/slider.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/slider.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sonner": {
    name: "sonner",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/sonner.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/sonner.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "switch": {
    name: "switch",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/switch.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/switch.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "table": {
    name: "table",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/table.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/table.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "tabs": {
    name: "tabs",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/tabs.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/tabs.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "textarea": {
    name: "textarea",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/textarea.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/textarea.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "toggle": {
    name: "toggle",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/toggle.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/toggle.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "toggle-group": {
    name: "toggle-group",
    description: "",
    type: "registry:ui",
    registryDependencies: ["toggle"],
    files: [{
      path: "registry/ui/toggle-group.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/toggle-group.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "tooltip": {
    name: "tooltip",
    description: "",
    type: "registry:ui",
    registryDependencies: undefined,
    files: [{
      path: "registry/ui/tooltip.tsx",
      type: "registry:ui",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/ui/tooltip.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "dashboard-01": {
    name: "dashboard-01",
    description: "A dashboard with sidebar, charts and data table.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","label","chart","card","select","tabs","table","toggle-group","badge","button","checkbox","dropdown-menu","drawer","input","avatar","sheet","sonner"],
    files: [{
      path: "registry/blocks/dashboard-01/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/dashboard-01/data.json",
      type: "registry:file",
      target: "app/dashboard/data.json"
    },{
      path: "registry/blocks/dashboard-01/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/chart-area-interactive.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/data-table.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/nav-documents.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/nav-secondary.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/section-cards.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/dashboard-01/components/site-header.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/dashboard-01/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-01": {
    name: "sidebar-01",
    description: "A simple sidebar with navigation grouped by section.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","label","dropdown-menu"],
    files: [{
      path: "registry/blocks/sidebar-01/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-01/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-01/components/search-form.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-01/components/version-switcher.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-01/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-02": {
    name: "sidebar-02",
    description: "A sidebar with collapsible sections.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","label","dropdown-menu"],
    files: [{
      path: "registry/blocks/sidebar-02/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-02/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-02/components/search-form.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-02/components/version-switcher.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-02/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-03": {
    name: "sidebar-03",
    description: "A sidebar with submenus.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb"],
    files: [{
      path: "registry/blocks/sidebar-03/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-03/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-03/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-04": {
    name: "sidebar-04",
    description: "A floating sidebar with submenus.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator"],
    files: [{
      path: "registry/blocks/sidebar-04/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-04/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-04/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-05": {
    name: "sidebar-05",
    description: "A sidebar with collapsible submenus.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","label","collapsible"],
    files: [{
      path: "registry/blocks/sidebar-05/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-05/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-05/components/search-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-05/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-06": {
    name: "sidebar-06",
    description: "A sidebar with submenus as dropdowns.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","card","dropdown-menu"],
    files: [{
      path: "registry/blocks/sidebar-06/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-06/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-06/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-06/components/sidebar-opt-in-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-06/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-07": {
    name: "sidebar-07",
    description: "A sidebar that collapses to icons.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","collapsible","dropdown-menu","avatar"],
    files: [{
      path: "registry/blocks/sidebar-07/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-07/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-07/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-07/components/nav-projects.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-07/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-07/components/team-switcher.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-07/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-08": {
    name: "sidebar-08",
    description: "An inset sidebar with secondary navigation.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","collapsible","dropdown-menu","avatar"],
    files: [{
      path: "registry/blocks/sidebar-08/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-08/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-08/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-08/components/nav-projects.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-08/components/nav-secondary.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-08/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-08/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-09": {
    name: "sidebar-09",
    description: "Collapsible nested sidebars.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","collapsible","dropdown-menu","avatar","switch","label"],
    files: [{
      path: "registry/blocks/sidebar-09/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-09/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-09/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-09/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-10": {
    name: "sidebar-10",
    description: "A sidebar in a popover.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","popover","collapsible","dropdown-menu"],
    files: [{
      path: "registry/blocks/sidebar-10/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-10/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-10/components/nav-actions.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-10/components/nav-favorites.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-10/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-10/components/nav-secondary.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-10/components/nav-workspaces.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-10/components/team-switcher.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-10/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-11": {
    name: "sidebar-11",
    description: "A sidebar with a collapsible file tree.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","collapsible"],
    files: [{
      path: "registry/blocks/sidebar-11/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-11/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-11/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-12": {
    name: "sidebar-12",
    description: "A sidebar with a calendar.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","collapsible","calendar","dropdown-menu","avatar"],
    files: [{
      path: "registry/blocks/sidebar-12/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-12/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-12/components/calendars.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-12/components/date-picker.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-12/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-12/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-13": {
    name: "sidebar-13",
    description: "A sidebar in a dialog.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","button","dialog"],
    files: [{
      path: "registry/blocks/sidebar-13/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-13/components/settings-dialog.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-13/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-14": {
    name: "sidebar-14",
    description: "A sidebar on the right.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb"],
    files: [{
      path: "registry/blocks/sidebar-14/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-14/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-14/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-15": {
    name: "sidebar-15",
    description: "A left and right sidebar.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","popover","collapsible","dropdown-menu","calendar","avatar"],
    files: [{
      path: "registry/blocks/sidebar-15/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-15/components/calendars.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/date-picker.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/nav-favorites.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/nav-secondary.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/nav-workspaces.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/sidebar-left.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/sidebar-right.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-15/components/team-switcher.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-15/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "sidebar-16": {
    name: "sidebar-16",
    description: "A sidebar with a sticky site header.",
    type: "registry:block",
    registryDependencies: ["sidebar","breadcrumb","separator","collapsible","dropdown-menu","avatar","button","label"],
    files: [{
      path: "registry/blocks/sidebar-16/page.tsx",
      type: "registry:page",
      target: "app/dashboard/page.tsx"
    },{
      path: "registry/blocks/sidebar-16/components/app-sidebar.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-16/components/nav-main.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-16/components/nav-projects.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-16/components/nav-secondary.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-16/components/nav-user.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-16/components/search-form.tsx",
      type: "registry:component",
      target: ""
    },{
      path: "registry/blocks/sidebar-16/components/site-header.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/sidebar-16/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "login-01": {
    name: "login-01",
    description: "A simple login form.",
    type: "registry:block",
    registryDependencies: ["button","card","input","label"],
    files: [{
      path: "registry/blocks/login-01/page.tsx",
      type: "registry:page",
      target: "app/login/page.tsx"
    },{
      path: "registry/blocks/login-01/components/login-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/login-01/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "login-02": {
    name: "login-02",
    description: "A two column login page with a cover image.",
    type: "registry:block",
    registryDependencies: ["button","card","input","label"],
    files: [{
      path: "registry/blocks/login-02/page.tsx",
      type: "registry:page",
      target: "app/login/page.tsx"
    },{
      path: "registry/blocks/login-02/components/login-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/login-02/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "login-03": {
    name: "login-03",
    description: "A login page with a muted background color.",
    type: "registry:block",
    registryDependencies: ["button","card","input","label"],
    files: [{
      path: "registry/blocks/login-03/page.tsx",
      type: "registry:page",
      target: "app/login/page.tsx"
    },{
      path: "registry/blocks/login-03/components/login-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/login-03/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "login-04": {
    name: "login-04",
    description: "A login page with form and image.",
    type: "registry:block",
    registryDependencies: ["button","card","input","label"],
    files: [{
      path: "registry/blocks/login-04/page.tsx",
      type: "registry:page",
      target: "app/login/page.tsx"
    },{
      path: "registry/blocks/login-04/components/login-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/login-04/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "login-05": {
    name: "login-05",
    description: "A simple email-only login page.",
    type: "registry:block",
    registryDependencies: ["button","card","input","label"],
    files: [{
      path: "registry/blocks/login-05/page.tsx",
      type: "registry:page",
      target: "app/login/page.tsx"
    },{
      path: "registry/blocks/login-05/components/login-form.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/login-05/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-axes": {
    name: "chart-area-axes",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-axes.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-axes.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-default": {
    name: "chart-area-default",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-default.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-default.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-gradient": {
    name: "chart-area-gradient",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-gradient.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-gradient.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-icons": {
    name: "chart-area-icons",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-icons.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-icons.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-interactive": {
    name: "chart-area-interactive",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart","select"],
    files: [{
      path: "registry/charts/chart-area-interactive.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-interactive.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-legend": {
    name: "chart-area-legend",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-legend.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-legend.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-linear": {
    name: "chart-area-linear",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-linear.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-linear.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-stacked-expand": {
    name: "chart-area-stacked-expand",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-stacked-expand.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-stacked-expand.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-stacked": {
    name: "chart-area-stacked",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-stacked.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-stacked.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-area-step": {
    name: "chart-area-step",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-area-step.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-area-step.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-active": {
    name: "chart-bar-active",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-active.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-active.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-default": {
    name: "chart-bar-default",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-default.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-default.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-horizontal": {
    name: "chart-bar-horizontal",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-horizontal.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-horizontal.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-interactive": {
    name: "chart-bar-interactive",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-interactive.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-interactive.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-label-custom": {
    name: "chart-bar-label-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-label-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-label-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-label": {
    name: "chart-bar-label",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-label.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-mixed": {
    name: "chart-bar-mixed",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-mixed.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-mixed.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-multiple": {
    name: "chart-bar-multiple",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-multiple.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-negative": {
    name: "chart-bar-negative",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-negative.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-negative.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-bar-stacked": {
    name: "chart-bar-stacked",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-bar-stacked.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-bar-stacked.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-default": {
    name: "chart-line-default",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-default.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-default.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-dots-colors": {
    name: "chart-line-dots-colors",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-dots-colors.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-dots-colors.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-dots-custom": {
    name: "chart-line-dots-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-dots-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-dots-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-dots": {
    name: "chart-line-dots",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-dots.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-dots.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-interactive": {
    name: "chart-line-interactive",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-interactive.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-interactive.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-label-custom": {
    name: "chart-line-label-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-label-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-label-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-label": {
    name: "chart-line-label",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-label.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-linear": {
    name: "chart-line-linear",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-linear.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-linear.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-multiple": {
    name: "chart-line-multiple",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-multiple.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-line-step": {
    name: "chart-line-step",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-line-step.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-line-step.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-donut-active": {
    name: "chart-pie-donut-active",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-donut-active.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-donut-active.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-donut-text": {
    name: "chart-pie-donut-text",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-donut-text.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-donut-text.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-donut": {
    name: "chart-pie-donut",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-donut.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-donut.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-interactive": {
    name: "chart-pie-interactive",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-interactive.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-interactive.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-label-custom": {
    name: "chart-pie-label-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-label-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-label-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-label-list": {
    name: "chart-pie-label-list",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-label-list.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-label-list.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-label": {
    name: "chart-pie-label",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-label.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-legend": {
    name: "chart-pie-legend",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-legend.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-legend.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-separator-none": {
    name: "chart-pie-separator-none",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-separator-none.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-separator-none.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-simple": {
    name: "chart-pie-simple",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-simple.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-simple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-pie-stacked": {
    name: "chart-pie-stacked",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-pie-stacked.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-pie-stacked.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-default": {
    name: "chart-radar-default",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-default.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-default.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-dots": {
    name: "chart-radar-dots",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-dots.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-dots.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-grid-circle-fill": {
    name: "chart-radar-grid-circle-fill",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-grid-circle-fill.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-grid-circle-fill.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-grid-circle-no-lines": {
    name: "chart-radar-grid-circle-no-lines",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-grid-circle-no-lines.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-grid-circle-no-lines.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-grid-circle": {
    name: "chart-radar-grid-circle",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-grid-circle.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-grid-circle.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-grid-custom": {
    name: "chart-radar-grid-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-grid-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-grid-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-grid-fill": {
    name: "chart-radar-grid-fill",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-grid-fill.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-grid-fill.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-grid-none": {
    name: "chart-radar-grid-none",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-grid-none.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-grid-none.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-icons": {
    name: "chart-radar-icons",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-icons.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-icons.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-label-custom": {
    name: "chart-radar-label-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-label-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-label-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-legend": {
    name: "chart-radar-legend",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-legend.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-legend.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-lines-only": {
    name: "chart-radar-lines-only",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-lines-only.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-lines-only.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-multiple": {
    name: "chart-radar-multiple",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-multiple.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-multiple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radar-radius": {
    name: "chart-radar-radius",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radar-radius.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radar-radius.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radial-grid": {
    name: "chart-radial-grid",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radial-grid.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radial-grid.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radial-label": {
    name: "chart-radial-label",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radial-label.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radial-label.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radial-shape": {
    name: "chart-radial-shape",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radial-shape.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radial-shape.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radial-simple": {
    name: "chart-radial-simple",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radial-simple.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radial-simple.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radial-stacked": {
    name: "chart-radial-stacked",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radial-stacked.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radial-stacked.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-radial-text": {
    name: "chart-radial-text",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-radial-text.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-radial-text.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-default": {
    name: "chart-tooltip-default",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-default.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-default.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-indicator-line": {
    name: "chart-tooltip-indicator-line",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-indicator-line.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-indicator-line.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-indicator-none": {
    name: "chart-tooltip-indicator-none",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-indicator-none.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-indicator-none.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-label-none": {
    name: "chart-tooltip-label-none",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-label-none.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-label-none.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-label-custom": {
    name: "chart-tooltip-label-custom",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-label-custom.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-label-custom.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-label-formatter": {
    name: "chart-tooltip-label-formatter",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-label-formatter.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-label-formatter.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-formatter": {
    name: "chart-tooltip-formatter",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-formatter.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-formatter.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-icons": {
    name: "chart-tooltip-icons",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-icons.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-icons.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "chart-tooltip-advanced": {
    name: "chart-tooltip-advanced",
    description: "",
    type: "registry:block",
    registryDependencies: ["card","chart"],
    files: [{
      path: "registry/charts/chart-tooltip-advanced.tsx",
      type: "registry:block",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/charts/chart-tooltip-advanced.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "utils": {
    name: "utils",
    description: "",
    type: "registry:lib",
    registryDependencies: undefined,
    files: [{
      path: "registry/lib/utils.ts",
      type: "registry:lib",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/lib/utils.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "use-mobile": {
    name: "use-mobile",
    description: "",
    type: "registry:hook",
    registryDependencies: undefined,
    files: [{
      path: "registry/hooks/use-mobile.ts",
      type: "registry:hook",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/hooks/use-mobile.ts")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "products-01": {
    name: "products-01",
    description: "A table of products",
    type: "registry:block",
    registryDependencies: ["checkbox","badge","button","dropdown-menu","pagination","table","tabs","select"],
    files: [{
      path: "registry/blocks/products-01/page.tsx",
      type: "registry:page",
      target: "app/products/page.tsx"
    },{
      path: "registry/blocks/products-01/components/products-table.tsx",
      type: "registry:component",
      target: ""
    }],
    component: React.lazy(async () => {
      const mod = await import("@/registry/refer/blocks/products-01/page.tsx")
      const exportName = Object.keys(mod).find(key => typeof mod[key] === 'function' || typeof mod[key] === 'object') || item.name
      return { default: mod.default || mod[exportName] }
    }),
    meta: undefined,
    tailwind: {},
    cssVars: {},
  },
  "index": {
    name: "index",
    description: "Comprehensive styling system for Refer with multiple themes and dark mode support",
    type: "registry:style",
    registryDependencies: ["http://localhost:3000/r/refer/accordion.json","http://localhost:3000/r/refer/alert.json","http://localhost:3000/r/refer/alert-dialog.json","http://localhost:3000/r/refer/aspect-ratio.json","http://localhost:3000/r/refer/avatar.json","http://localhost:3000/r/refer/badge.json","http://localhost:3000/r/refer/breadcrumb.json","http://localhost:3000/r/refer/button.json","http://localhost:3000/r/refer/calendar.json","http://localhost:3000/r/refer/card.json","http://localhost:3000/r/refer/carousel.json","http://localhost:3000/r/refer/chart.json","http://localhost:3000/r/refer/checkbox.json","http://localhost:3000/r/refer/collapsible.json","http://localhost:3000/r/refer/command.json","http://localhost:3000/r/refer/context-menu.json","http://localhost:3000/r/refer/dialog.json","http://localhost:3000/r/refer/drawer.json","http://localhost:3000/r/refer/dropdown-menu.json","http://localhost:3000/r/refer/form.json","http://localhost:3000/r/refer/hover-card.json","http://localhost:3000/r/refer/input.json","http://localhost:3000/r/refer/input-otp.json","http://localhost:3000/r/refer/label.json","http://localhost:3000/r/refer/menubar.json","http://localhost:3000/r/refer/navigation-menu.json","http://localhost:3000/r/refer/pagination.json","http://localhost:3000/r/refer/popover.json","http://localhost:3000/r/refer/progress.json","http://localhost:3000/r/refer/radio-group.json","http://localhost:3000/r/refer/resizable.json","http://localhost:3000/r/refer/scroll-area.json","http://localhost:3000/r/refer/select.json","http://localhost:3000/r/refer/separator.json","http://localhost:3000/r/refer/sheet.json","http://localhost:3000/r/refer/sidebar.json","http://localhost:3000/r/refer/skeleton.json","http://localhost:3000/r/refer/slider.json","http://localhost:3000/r/refer/sonner.json","http://localhost:3000/r/refer/switch.json","http://localhost:3000/r/refer/table.json","http://localhost:3000/r/refer/tabs.json","http://localhost:3000/r/refer/textarea.json","http://localhost:3000/r/refer/toggle.json","http://localhost:3000/r/refer/toggle-group.json","http://localhost:3000/r/refer/tooltip.json","http://localhost:3000/r/refer/dashboard-01.json","http://localhost:3000/r/refer/sidebar-01.json","http://localhost:3000/r/refer/sidebar-02.json","http://localhost:3000/r/refer/sidebar-03.json","http://localhost:3000/r/refer/sidebar-04.json","http://localhost:3000/r/refer/sidebar-05.json","http://localhost:3000/r/refer/sidebar-06.json","http://localhost:3000/r/refer/sidebar-07.json","http://localhost:3000/r/refer/sidebar-08.json","http://localhost:3000/r/refer/sidebar-09.json","http://localhost:3000/r/refer/sidebar-10.json","http://localhost:3000/r/refer/sidebar-11.json","http://localhost:3000/r/refer/sidebar-12.json","http://localhost:3000/r/refer/sidebar-13.json","http://localhost:3000/r/refer/sidebar-14.json","http://localhost:3000/r/refer/sidebar-15.json","http://localhost:3000/r/refer/sidebar-16.json","http://localhost:3000/r/refer/login-01.json","http://localhost:3000/r/refer/login-02.json","http://localhost:3000/r/refer/login-03.json","http://localhost:3000/r/refer/login-04.json","http://localhost:3000/r/refer/login-05.json","http://localhost:3000/r/refer/chart-area-axes.json","http://localhost:3000/r/refer/chart-area-default.json","http://localhost:3000/r/refer/chart-area-gradient.json","http://localhost:3000/r/refer/chart-area-icons.json","http://localhost:3000/r/refer/chart-area-interactive.json","http://localhost:3000/r/refer/chart-area-legend.json","http://localhost:3000/r/refer/chart-area-linear.json","http://localhost:3000/r/refer/chart-area-stacked-expand.json","http://localhost:3000/r/refer/chart-area-stacked.json","http://localhost:3000/r/refer/chart-area-step.json","http://localhost:3000/r/refer/chart-bar-active.json","http://localhost:3000/r/refer/chart-bar-default.json","http://localhost:3000/r/refer/chart-bar-horizontal.json","http://localhost:3000/r/refer/chart-bar-interactive.json","http://localhost:3000/r/refer/chart-bar-label-custom.json","http://localhost:3000/r/refer/chart-bar-label.json","http://localhost:3000/r/refer/chart-bar-mixed.json","http://localhost:3000/r/refer/chart-bar-multiple.json","http://localhost:3000/r/refer/chart-bar-negative.json","http://localhost:3000/r/refer/chart-bar-stacked.json","http://localhost:3000/r/refer/chart-line-default.json","http://localhost:3000/r/refer/chart-line-dots-colors.json","http://localhost:3000/r/refer/chart-line-dots-custom.json","http://localhost:3000/r/refer/chart-line-dots.json","http://localhost:3000/r/refer/chart-line-interactive.json","http://localhost:3000/r/refer/chart-line-label-custom.json","http://localhost:3000/r/refer/chart-line-label.json","http://localhost:3000/r/refer/chart-line-linear.json","http://localhost:3000/r/refer/chart-line-multiple.json","http://localhost:3000/r/refer/chart-line-step.json","http://localhost:3000/r/refer/chart-pie-donut-active.json","http://localhost:3000/r/refer/chart-pie-donut-text.json","http://localhost:3000/r/refer/chart-pie-donut.json","http://localhost:3000/r/refer/chart-pie-interactive.json","http://localhost:3000/r/refer/chart-pie-label-custom.json","http://localhost:3000/r/refer/chart-pie-label-list.json","http://localhost:3000/r/refer/chart-pie-label.json","http://localhost:3000/r/refer/chart-pie-legend.json","http://localhost:3000/r/refer/chart-pie-separator-none.json","http://localhost:3000/r/refer/chart-pie-simple.json","http://localhost:3000/r/refer/chart-pie-stacked.json","http://localhost:3000/r/refer/chart-radar-default.json","http://localhost:3000/r/refer/chart-radar-dots.json","http://localhost:3000/r/refer/chart-radar-grid-circle-fill.json","http://localhost:3000/r/refer/chart-radar-grid-circle-no-lines.json","http://localhost:3000/r/refer/chart-radar-grid-circle.json","http://localhost:3000/r/refer/chart-radar-grid-custom.json","http://localhost:3000/r/refer/chart-radar-grid-fill.json","http://localhost:3000/r/refer/chart-radar-grid-none.json","http://localhost:3000/r/refer/chart-radar-icons.json","http://localhost:3000/r/refer/chart-radar-label-custom.json","http://localhost:3000/r/refer/chart-radar-legend.json","http://localhost:3000/r/refer/chart-radar-lines-only.json","http://localhost:3000/r/refer/chart-radar-multiple.json","http://localhost:3000/r/refer/chart-radar-radius.json","http://localhost:3000/r/refer/chart-radial-grid.json","http://localhost:3000/r/refer/chart-radial-label.json","http://localhost:3000/r/refer/chart-radial-shape.json","http://localhost:3000/r/refer/chart-radial-simple.json","http://localhost:3000/r/refer/chart-radial-stacked.json","http://localhost:3000/r/refer/chart-radial-text.json","http://localhost:3000/r/refer/chart-tooltip-default.json","http://localhost:3000/r/refer/chart-tooltip-indicator-line.json","http://localhost:3000/r/refer/chart-tooltip-indicator-none.json","http://localhost:3000/r/refer/chart-tooltip-label-none.json","http://localhost:3000/r/refer/chart-tooltip-label-custom.json","http://localhost:3000/r/refer/chart-tooltip-label-formatter.json","http://localhost:3000/r/refer/chart-tooltip-formatter.json","http://localhost:3000/r/refer/chart-tooltip-icons.json","http://localhost:3000/r/refer/chart-tooltip-advanced.json","http://localhost:3000/r/refer/utils.json","http://localhost:3000/r/refer/use-mobile.json","http://localhost:3000/r/refer/products-01.json"],
    files: [],
    component: null,
    meta: undefined,
    tailwind: {},
    cssVars: {"light":{"--background":"var(--color-stone-50)","--foreground":"var(--color-stone-700)","--card":"var(--color-white)","--card-foreground":"var(--foreground)","--popover":"--alpha(var(--color-stone-200) / 50%)","--popover-foreground":"var(--foreground)","--primary":"var(--color-refer-600)","--primary-subtle":"--alpha(var(--primary) / 5%)","--primary-border":"--alpha(var(--primary) / 10%)","--primary-foreground":"var(--color-stone-50)","--secondary":"var(--color-stone-500)","--secondary-foreground":"var(--color-stone-100)","--muted":"--alpha(var(--color-stone-700) / 7%)","--muted-foreground":"var(--color-stone-500)","--accent":"--alpha(var(--color-stone-700) / 5%)","--accent-foreground":"var(--foreground)","--destructive":"var(--color-amber-700)","--destructive-subtle":"--alpha(var(--destructive) / 5%)","--destructive-border":"--alpha(var(--destructive) / 10%)","--destructive-foreground":"var(--color-white)","--positive":"var(--color-emerald-700)","--positive-subtle":"--alpha(var(--positive) / 5%)","--positive-border":"--alpha(var(--positive) / 10%)","--positive-foreground":"var(--color-white)","--info":"var(--color-sky-700)","--info-subtle":"--alpha(var(--info) / 5%)","--info-border":"--alpha(var(--info) / 10%)","--info-foreground":"var(--color-white)","--border":"--alpha(var(--color-stone-900) / 10%)","--border-low":"--alpha(var(--color-stone-900) / 5%)","--input":"var(--color-stone-300)","--ring":"--alpha(var(--primary) / 80%)","--chart-1":"#b05730","--chart-2":"#9c87f5","--chart-3":"#ded8c4","--chart-4":"#dbd3f0","--chart-5":"#b4552d","--sidebar":"--alpha(var(--primary) / 1%)","--sidebar-foreground":"var(--foreground)","--sidebar-primary":"var(--primary)","--sidebar-primary-foreground":"var(--primary-foreground)","--sidebar-accent":"var(--accent)","--sidebar-accent-foreground":"var(--accent-foreground)","--sidebar-border":"var(--border)","--sidebar-ring":"var(--ring)","--font-sans":"Inter, sans-serif","--font-serif":"ui-serif, Georgia, Cambria, \"Times New Roman\", Times, serif","--font-mono":"ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, \"Liberation Mono\", \"Courier New\", monospace","--radius":"0.5rem","--input-radius":"0.5rem","--shadow-2xs":"0 1px --alpha(var(--color-refer-950) / 5%)","--shadow-xs":"0 1px 2px 0 --alpha(var(--color-refer-950) / 5%)","--shadow-sm":"0 1px 3px 0 --alpha(var(--color-refer-950) / 10%), 0 1px 2px -1px --alpha(var(--color-refer-950) / 10%)","--shadow-md":"0 4px 6px -1px --alpha(var(--color-refer-950) / 10%), 0 2px 4px -2px --alpha(var(--color-refer-950) / 10%)","--shadow-lg":"0 10px 15px -3px --alpha(var(--color-refer-950) / 10%), 0 4px 6px -4px --alpha(var(--color-refer-950) / 10%)","--shadow-xl":"0 20px 25px -5px --alpha(var(--color-refer-950) / 10%), 0 8px 10px -6px --alpha(var(--color-refer-950) / 10%)","--shadow-2xl":"0 25px 50px -12px --alpha(var(--color-refer-950) / 25%)","--shadow-card":"0px 0px 0px 0.5px --alpha(var(--color-refer-950) / 6%), 0px 2px 0px 0px --alpha(var(--color-refer-950) / 4%), 0px 8px 20px -4px --alpha(var(--color-refer-950) / 3%)","--transform-pressed":".97"},"dark":{"--background":"var(--color-neutral-900)","--foreground":"var(--color-neutral-200)","--card":"var(--color-neutral-800)","--card-foreground":"var(--color-neutral-200)","--popover":"--alpha(var(--color-neutral-200) / 20%)","--popover-foreground":"var(--foreground)","--primary":"var(--color-refer-500)","--primary-subtle":"--alpha(var(--color-primary) / 10%)","--primary-border":"--alpha(var(--color-primary) / 15%)","--primary-foreground":"var(--color-neutral-50)","--secondary":"var(--color-neutral-500)","--secondary-foreground":"var(--foreground)","--muted":"--alpha(var(--color-neutral-200) / 8%)","--muted-foreground":"var(--color-neutral-400)","--accent":"--alpha(var(--color-neutral-200) / 7%)","--accent-foreground":"var(--foreground)","--destructive":"var(--color-orange-400)","--destructive-subtle":"--alpha(var(--destructive) / 5%)","--destructive-border":"--alpha(var(--destructive) / 10%)","--destructive-foreground":"var(--color-orange-950)","--positive":"var(--color-emerald-500)","--positive-subtle":"--alpha(var(--color-emerald-200) / 5%)","--positive-border":"--alpha(var(--positive) / 10%)","--positive-foreground":"var(--color-emerald-950)","--info":"var(--color-sky-500)","--info-subtle":"--alpha(var(--color-sky-300) / 5%)","--info-border":"--alpha(var(--info) / 10%)","--info-foreground":"var(--color-sky-950)","--border":"--alpha(var(--color-neutral-200) / 10%)","--border-low":"--alpha(var(--color-neutral-200) / 4%)","--input":"var(--color-neutral-600)","--ring":"var(--color-neutral-200)","--chart-1":"#b05730","--chart-2":"#9c87f5","--chart-3":"#1a1915","--chart-4":"#2f2b48","--chart-5":"#b4552d","--sidebar":"--alpha(var(--primary) / 1%)","--sidebar-foreground":"var(--foreground)","--sidebar-primary":"var(--primary)","--sidebar-primary-foreground":"var(--primary-foreground)","--sidebar-accent":"var(--accent)","--sidebar-accent-foreground":"var(--accent-foreground)","--sidebar-border":"var(--border)","--sidebar-ring":"var(--ring)","--shadow-2xs":"0 1px --alpha(var(--color-zinc-950) / 25%)","--shadow-xs":"0 1px 2px 0 --alpha(var(--color-zinc-950) / 25%)","--shadow-sm":"0 1px 3px 0 --alpha(var(--color-zinc-950) / 25%), 0 1px 2px -1px --alpha(var(--color-zinc-950) / 25%)","--shadow-md":"0 4px 6px -1px --alpha(var(--color-zinc-950) / 25%), 0 2px 4px -2px --alpha(var(--color-zinc-950) / 25%)","--shadow-lg":"0 10px 15px -3px --alpha(var(--color-zinc-950) / 40%), 0 4px 6px -4px --alpha(var(--color-zinc-950) / 40%)","--shadow-xl":"0 25px 25px -5px --alpha(var(--color-zinc-950) / 40%), 0 8px 10px -6px --alpha(var(--color-zinc-950) / 40%)","--shadow-2xl":"0 30px 50px -12px --alpha(var(--color-zinc-950) / 60%)","--shadow-card":"0px 0px 0px 0.5px --alpha(var(--color-white) / 8%), 0px 2px 0px 0px --alpha(var(--color-white) / 5%), 0px 8px 20px -4px --alpha(var(--color-black) / 10%)"},"theme":{"--color-background":"var(--background)","--color-foreground":"var(--foreground)","--color-card":"var(--card)","--color-card-foreground":"var(--card-foreground)","--color-popover":"var(--popover)","--color-popover-foreground":"var(--popover-foreground)","--color-primary":"var(--primary)","--color-primary-subtle":"var(--primary-subtle)","--color-primary-border":"var(--primary-border)","--color-primary-foreground":"var(--primary-foreground)","--color-secondary":"var(--secondary)","--color-secondary-foreground":"var(--secondary-foreground)","--color-muted":"var(--muted)","--color-muted-foreground":"var(--muted-foreground)","--color-accent":"var(--accent)","--color-accent-foreground":"var(--accent-foreground)","--color-destructive":"var(--destructive)","--color-destructive-subtle":"var(--destructive-subtle)","--color-destructive-border":"var(--destructive-border)","--color-destructive-foreground":"var(--destructive-foreground)","--color-positive":"var(--positive)","--color-positive-subtle":"var(--positive-subtle)","--color-positive-border":"var(--positive-border)","--color-positive-foreground":"var(--positive-foreground)","--color-info":"var(--info)","--color-info-subtle":"var(--info-subtle)","--color-info-border":"var(--info-border)","--color-info-foreground":"var(--info-foreground)","--color-border":"var(--border)","--color-border-low":"var(--border-low)","--color-input":"var(--input)","--color-ring":"var(--ring)","--color-chart-1":"var(--chart-1)","--color-chart-2":"var(--chart-2)","--color-chart-3":"var(--chart-3)","--color-chart-4":"var(--chart-4)","--color-chart-5":"var(--chart-5)","--color-sidebar":"var(--sidebar)","--color-sidebar-foreground":"var(--sidebar-foreground)","--color-sidebar-primary":"var(--sidebar-primary)","--color-sidebar-primary-foreground":"var(--sidebar-primary-foreground)","--color-sidebar-accent":"var(--sidebar-accent)","--color-sidebar-accent-foreground":"var(--sidebar-accent-foreground)","--color-sidebar-border":"var(--sidebar-border)","--color-sidebar-ring":"var(--sidebar-ring)","--color-refer-50":"#fcf4f4","--color-refer-100":"#fae7e6","--color-refer-200":"#f7d3d1","--color-refer-300":"#f0b4b1","--color-refer-400":"#e68883","--color-refer-500":"#d8625b","--color-refer-600":"#bf423b","--color-refer-700":"#a43731","--color-refer-800":"#88312c","--color-refer-900":"#722e2a","--color-refer-950":"#3d1412","--font-sans":"var(--font-sans)","--font-mono":"var(--font-mono)","--font-serif":"var(--font-serif)","--radius-sm":"calc(var(--radius) - 4px)","--radius-md":"calc(var(--radius) - 2px)","--radius-lg":"var(--radius)","--radius-xl":"calc(var(--radius) + 4px)","--radius-input":"var(--input-radius)","--shadow-2xs":"var(--shadow-2xs)","--shadow-xs":"var(--shadow-xs)","--shadow-sm":"var(--shadow-sm)","--shadow":"var(--shadow)","--shadow-md":"var(--shadow-md)","--shadow-lg":"var(--shadow-lg)","--shadow-xl":"var(--shadow-xl)","--shadow-2xl":"var(--shadow-2xl)","--shadow-card":"var(--shadow-card)","--scale-pressed":"var(--transform-pressed)"}},
  },
  }